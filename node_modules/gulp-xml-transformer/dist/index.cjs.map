{"version":3,"file":"index.cjs","sources":["../src/const.js","../src/transformers.js","../src/index.js"],"sourcesContent":["// eslint-disable-next-line import/prefer-default-export\nexport const PLUGIN_NAME = 'gulp-xml-transformer';\n","import libxmljs from 'libxmljs2';\nimport arrify from 'arrify';\nimport normalize from 'value-or-function';\nimport PluginError from 'plugin-error';\n\n// https://github.com/import-js/eslint-plugin-import/issues/2104\nimport { PLUGIN_NAME } from './const.js'; // eslint-disable-line import/extensions\n\nconst stringOrNumber = (...args) => normalize(['number', 'string'], ...args);\n\n// edit XML document by user specific function\nexport const func = (tranformation) => (xml) => Promise.resolve(tranformation(xml, libxmljs))\n  .then((newDoc) => newDoc.toString());\n\n// edit XML document by user specific object\nexport const obj = (transformations, nsUri) => (doc) => {\n  transformations.forEach((transformation) => {\n    const elem = (nsUri === undefined)\n      ? doc.get(transformation.path)\n      : doc.get(transformation.path, nsUri);\n    const { isMandatory = true } = transformation;\n\n    if (!(elem instanceof libxmljs.Element)) {\n      if (isMandatory) {\n        throw new PluginError(PLUGIN_NAME, `Can't find element at \"${transformation.path}\"`);\n      }\n\n      return;\n    }\n\n    if ({}.hasOwnProperty.call(transformation, 'text')) {\n      elem.text(transformation.text);\n    }\n\n    const attrs = arrify(transformation.attrs || transformation.attr);\n    attrs.forEach((attr) => {\n      Object.keys(attr).forEach((key) => {\n        const oldAttr = elem.attr(key);\n        const oldVal = oldAttr && oldAttr.value();\n        const val = stringOrNumber(attr[key], oldVal);\n        elem.attr({ [key]: val });\n      });\n    });\n  });\n\n  return doc.toString();\n};\n","import { callbackify } from 'util';\nimport arrify from 'arrify';\nimport through from 'through2';\nimport vinylToString from 'vinyl-contents-tostring';\nimport PluginError from 'plugin-error';\nimport { parseXmlString } from 'libxmljs2';\n\nimport { PLUGIN_NAME } from './const';\nimport {\n  func as functionTransformer,\n  obj as objectTransformer,\n} from './transformers';\n\nconst clone = (fn) => (file, enc) => fn(file.clone(), enc);\n\nconst update = (file) => (xml) => Object.assign(file, {\n  contents: file.isBuffer()\n    ? Buffer.from(xml)\n    : through().end(xml),\n});\n\nconst getTransformStream = (transformer) => through.obj(\n  callbackify(clone((file, enc) => (\n    file.isNull()\n      ? Promise.resolve(file)\n      : vinylToString(file, enc)\n        .then(parseXmlString)\n        .then(transformer)\n        .then(update(file))))),\n);\n\nexport default (transformations, nsUri) => {\n  // check options\n  switch (typeof transformations) {\n    case 'function':\n      return getTransformStream(functionTransformer(transformations));\n    case 'object':\n      return getTransformStream(objectTransformer(arrify(transformations), nsUri));\n    case 'undefined':\n      throw new PluginError(PLUGIN_NAME, 'transformations option is required');\n    default:\n      throw new PluginError(PLUGIN_NAME, 'transformations option must be a function or an object');\n  }\n};\n"],"names":["normalize","libxmljs","PluginError","arrify","through","callbackify","vinylToString","parseXmlString","functionTransformer","objectTransformer"],"mappings":"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"}