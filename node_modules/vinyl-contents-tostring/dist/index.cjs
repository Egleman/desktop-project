'use strict';

var Vinyl = require('vinyl');
var streamToString = require('stream-to-string');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var Vinyl__default = /*#__PURE__*/_interopDefaultLegacy(Vinyl);
var streamToString__default = /*#__PURE__*/_interopDefaultLegacy(streamToString);

// import { isVinyl } from 'vinyl';

const { isVinyl } = Vinyl__default["default"];

var index = (file, enc) => (!isVinyl(file) // eslint-disable-line no-nested-ternary
  ? Promise.reject(new TypeError('First argument must be a Vinyl file'))
  : file.isBuffer() // eslint-disable-line no-nested-ternary
    ? Promise.resolve(file.contents.toString(enc))
    : file.isStream()
      ? streamToString__default["default"](file.contents, enc)
      : Promise.resolve(''));

module.exports = index;
//# sourceMappingURL=index.cjs.map
